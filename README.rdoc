= foxinator-generator

The +foxinator-generator+ lets you quickly get HitFox projects off the ground. It comes with three installation options: a basic admin controller system, a CMS with roles & permissions, and a CMS with admin comments. Of course, you can install all three too. It also gives you a custom scaffold to generate admin-area models.

== Features

The +foxinator-generator+ uses the HitFox fork of Comfortable Mexican Sofa, Devise, and the +inherited_resource+ and +state_machine+ gems. The basic structure is an Admin namespace, which has a BaseController. All future admin-area controllers will inherit from this BaseController. The BaseController comes with a set of default views which will be automatically inherited by all sub-controllers, making your code more DRY.

When you use the <tt>foxinator:create</tt> command, it will add a controller in this Admin namespace, inheriting from the BaseController.

== Installation

Include the gem in your gemfile:

<tt>gem "foxinator-generator", git: "git@github.com:HitFox/foxinator-generator.git"</tt>

Then answer +y+ or +n+ to the prompts.

== Usage

In your rails app run <tt>bundle install</tt> then to create your admin namespace:

<tt>rails g foxinator:setup</tt>

This will install Devise and Comfortable Mexican Sofa and all other required dependencies for your admin area!

It will automatically create an admin account with email "admin@example.com" and password "password".

Then change the <tt>config.sign_out_via</tt> in <tt>devise.rb</tt> to <tt>:get</tt>.

If you want to specify a default site, uncomment line 10 in <tt>i18n.rb</tt>

Now if you want to create an admin-area controller using the +foxinator-generator+ you can:

<tt>rails g foxinator:scaffold MyModel name:string</tt>

Which will automatically create the model and controller files (inheriting from BaseController) and some default views.

Last step: Edit the permitted params in your controller file!

That's it! You should now have a basic app up and running!

=== The foxinator:scaffold Command

When you create a new admin-area controller and model using the foxinator:scaffold command there are a few additional steps to keep in mind.

To begin with, you need to customize your views and strong params.

If you have Comments in your project, you have to add your model to line 35 in the +comments_controller.rb+ like so:

<tt>belongs_to :admin, :role, :my_new_model, polymorphic: true</tt>

Then also add this line to your +model.rb+ file:
<tt>include Commentable</tt>

Finally, in routes you need to add <tt>concerns: [:commentable]</tt> and then click the "Sync Roles & Permissions" button under Admin>Roles in the CMS admin page.

==== foxinator:scaffold:controller & foxinator:scaffold:model

If you just want to create a controller file and views, use <tt>foxinator:scaffold:controller Example</tt>. If you just need a model, use <tt>foxinator:scaffold:model MyModel</tt>.

Please note that both of these commands create admin-namespaced classes.

=== Additional Features

There is now a basic tooltip functionality built into the CMS. If you want to add a tool tip to a table head, simply expand the +th+ tag like this:

<tt>= th(:some_field, title_suffix: tooltip('MY TOOLTIP TEXT', placement: :right)</tt>

By default the placement is :top, but you can overwrite it.


